// Vitest Snapshot v1

exports[`"get-login-callback" handler > calls "createLoginCallbackScript" with correct args 1`] = `
[
  [
    {
      "appDomain": "trip.pictures",
      "envName": "production",
    },
  ],
]
`;

exports[`"get-login-callback" handler > calls "createSession" with correct args 1`] = `
[
  [
    {
      "tokens": {
        "accessToken": "dummyAccessToken",
        "expiresIn": 123,
        "idToken": "dummyIdToken",
        "idTokenPayload": {
          "aud": "dummyAud",
          "nonce": "dummyIdTokenNonce",
          "sub": "dummySub",
        },
        "refreshToken": "dummyRefreshToken",
      },
    },
  ],
]
`;

exports[`"get-login-callback" handler > calls "fetchTokens" with correct args 1`] = `
[
  [
    {
      "authDomain": "dummyAuthDomain",
      "clientId": "dummyClientId",
      "code": "dummyCode",
      "codeVerifier": "dummyCodeVerifier",
      "loginCallbackUrl": "dummyLoginCallbackUrl",
    },
  ],
]
`;

exports[`"get-login-callback" handler > calls "parseOauthCookie" with correct args 1`] = `
[
  [
    {
      "cookies": "dummyCookies",
      "queryStringParameters": {
        "code": "dummyCode",
        "error_description": "dummyQueryStringErrorDescription",
        "state": "dummyState",
      },
    },
  ],
]
`;

exports[`"get-login-callback" handler > resolves with a correct value 1`] = `
{
  "body": "<script>dummyScript</script>",
  "cookies": [
    "dummySessionCookie",
  ],
  "headers": {
    "Content-Type": "text/html",
  },
  "statusCode": 200,
}
`;

exports[`"get-login-callback" handler > when "authDomain" env var is missing > calls "errorResponse" with correct args 1`] = `
[
  [
    "XuJRO7_43O",
  ],
]
`;

exports[`"get-login-callback" handler > when "authDomain" env var is missing > resolves with a correct value 1`] = `"dummyErrorResponse"`;

exports[`"get-login-callback" handler > when "clientId" env var is missing > calls "errorResponse" with correct args 1`] = `
[
  [
    "XuJRO7_43O",
  ],
]
`;

exports[`"get-login-callback" handler > when "clientId" env var is missing > resolves with a correct value 1`] = `"dummyErrorResponse"`;

exports[`"get-login-callback" handler > when "code" query string parameter is missing > calls "errorResponse" with correct args 1`] = `
[
  [
    "1cByWITGGHw",
    {
      "statusCode": 400,
    },
  ],
]
`;

exports[`"get-login-callback" handler > when "code" query string parameter is missing > resolves with a correct value 1`] = `"dummyErrorResponse"`;

exports[`"get-login-callback" handler > when "error" query string parameter is present > calls "errorResponse" with correct args 1`] = `
[
  [
    "5vR4w3wVJs",
    {
      "error": "dummyQueryStringError: dummyQueryStringErrorDescription",
    },
  ],
]
`;

exports[`"get-login-callback" handler > when "error" query string parameter is present > resolves with a correct value 1`] = `"dummyErrorResponse"`;

exports[`"get-login-callback" handler > when "idTokenNonce" from "oauth" cookie does not match with "nonce" from the "idToken" payload > calls "errorResponse" with correct args 1`] = `
[
  [
    "C25fjaal7o",
    {
      "statusCode": 401,
    },
  ],
]
`;

exports[`"get-login-callback" handler > when "idTokenNonce" from "oauth" cookie does not match with "nonce" from the "idToken" payload > resolves with a correct value 1`] = `"dummyErrorResponse"`;

exports[`"get-login-callback" handler > when "loginCallbackUrl" env var is missing > calls "errorResponse" with correct args 1`] = `
[
  [
    "XuJRO7_43O",
  ],
]
`;

exports[`"get-login-callback" handler > when "loginCallbackUrl" env var is missing > resolves with a correct value 1`] = `"dummyErrorResponse"`;

exports[`"get-login-callback" handler > when "oauth" cookie content is missing "codeVerifier" key > calls "errorResponse" with correct args 1`] = `
[
  [
    "OSUiwUI_DG",
  ],
]
`;

exports[`"get-login-callback" handler > when "oauth" cookie content is missing "codeVerifier" key > resolves with a correct value 1`] = `"dummyErrorResponse"`;

exports[`"get-login-callback" handler > when "oauth" cookie content is missing "idTokenNonce" key > calls "errorResponse" with correct args 1`] = `
[
  [
    "OSUiwUI_DG",
  ],
]
`;

exports[`"get-login-callback" handler > when "oauth" cookie content is missing "idTokenNonce" key > resolves with a correct value 1`] = `"dummyErrorResponse"`;

exports[`"get-login-callback" handler > when "oauth" cookie content is missing "stateNonce" key > calls "errorResponse" with correct args 1`] = `
[
  [
    "OSUiwUI_DG",
  ],
]
`;

exports[`"get-login-callback" handler > when "oauth" cookie content is missing "stateNonce" key > resolves with a correct value 1`] = `"dummyErrorResponse"`;

exports[`"get-login-callback" handler > when "state" query string parameter is missing > calls "errorResponse" with correct args 1`] = `
[
  [
    "1cByWITGGHw",
    {
      "statusCode": 400,
    },
  ],
]
`;

exports[`"get-login-callback" handler > when "state" query string parameter is missing > resolves with a correct value 1`] = `"dummyErrorResponse"`;

exports[`"get-login-callback" handler > when "stateNonce" from "oauth" cookie does not match with "state" from query strings params > calls "errorResponse" with correct args 1`] = `
[
  [
    "eWe87M5edc",
    {
      "statusCode": 401,
    },
  ],
]
`;

exports[`"get-login-callback" handler > when "stateNonce" from "oauth" cookie does not match with "state" from query strings params > resolves with a correct value 1`] = `"dummyErrorResponse"`;
